knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(dpi = 300)
knitr::opts_chunk$set(message = F)
knitr::opts_chunk$set(warning = F)
knitr::opts_chunk$set(fig.align="left")
library(tidyverse)
library(spsurvey)
library(sf)
source('functions.R')
praw <- '../data/raw'
f <- list.files(praw)
soil_stab <- read.csv( file.path(praw, f[grep('Benchmark', f)]) )
ss_full <- soil_stab %>%
group_by(ESD) %>%
filter(n() ==3) %>%
ungroup()
ss_two <- soil_stab %>%  # SITES with two metrics, in all instances
group_by(ESD) %>% # simply missing the average.
filter(n() == 2)
ss_one <- soil_stab %>% # sites with only a single metric
group_by(ESD) %>%
filter(n() == 1)
ss_median <- soil_stab %>%
ungroup() %>%
pivot_longer( cols = LOW:HIGH, names_to = 'ESTIMATE', values_to = 'STABILITY') %>%
group_by(SETTING, ESTIMATE) %>%
mutate(MEDIAN = median(STABILITY)) %>%
add_count(name = 'SAMPLE')
prcnt <- paste0(round( length(unique(ss_full$ESD))/length(unique(soil_stab$ESD)) * 100, 1), '%')
missing <- ss_median %>%
group_by(ESD) %>%
filter(n() < 6)
tomake <- missing %>%
distinct(ESD) %>%
pull(ESD)
medians <- ss_median %>%
distinct(SETTING, ESTIMATE, MEDIAN)
missing <- tibble(
ESD = rep(tomake, each = 6),
SETTING = rep(c('INTERSPACES', 'CANOPY', 'SITE'), each = 2, times = length(tomake)),
ESTIMATE = rep(c('LOW', 'HIGH'), each = 1, times = length(tomake)*3)
) %>%
left_join(., medians) %>%
left_join(., missing, by = c('ESD', 'SETTING', 'ESTIMATE', 'MEDIAN')) %>%
rowwise() %>%
mutate(STABILITY = replace_na(STABILITY, MEDIAN))
ss_median <- ss_median %>%
group_by(ESD) %>%
filter(n() == 6) %>%
bind_rows(., missing) %>%
select(-SAMPLE)
# write.csv(ss_median, '../data/processed/imputed_medians.csv', row.names = F)
rm(missing, tomake, medians)
rm(prcnt, ss_two, ss_one, ss_full, soil_stab)
ss <- read.csv(file.path(praw, f[grep('AIM', f)])) %>%
select(OBJECTID, PrimaryKey, starts_with(c('Rating',  'Veg'))) %>%
filter(if_all(Rating1:Veg18, ~ !is.na(.x))) %>%
mutate(across(.col = everything(), ~ na_if(.x, ""))) %>%
pivot_longer(cols = Rating1:Rating18, names_to = 'Position',
values_to = 'Aggregate_Stability') %>%
pivot_longer(cols = Veg1:Veg18, names_to = 'Position_Veg',
values_to = 'Vegetation_Type') %>%
mutate(Position = str_remove(Position, 'Rating'),
Position_Veg = str_remove(Position_Veg, 'Veg')) %>%
filter(Position == Position_Veg) %>%
select(-starts_with('Position')) %>%
mutate(Type = if_else(Vegetation_Type %in% c('F', 'G', 'Sh', 'T'),
'Canopy', 'Interspace')) %>%
group_by(OBJECTID) %>%
mutate(SiteStability = median(Aggregate_Stability)) %>%
group_by(OBJECTID, Type) %>%
mutate(Type_stability = median(Aggregate_Stability)) %>%
add_count(name = 'Sample_n')
ss <- read.csv(file.path(praw, f[grep('AIM', f)])) %>%
select(OBJECTID, PrimaryKey, starts_with(c('Rating',  'Veg'))) %>%
filter(if_all(Rating1:Veg18, ~ !is.na(.x))) %>%
mutate(across(.col = everything(), ~ na_if(., ""))) %>%
pivot_longer(cols = Rating1:Rating18, names_to = 'Position',
values_to = 'Aggregate_Stability') %>%
pivot_longer(cols = Veg1:Veg18, names_to = 'Position_Veg',
values_to = 'Vegetation_Type') %>%
mutate(Position = str_remove(Position, 'Rating'),
Position_Veg = str_remove(Position_Veg, 'Veg')) %>%
filter(Position == Position_Veg) %>%
select(-starts_with('Position')) %>%
mutate(Type = if_else(Vegetation_Type %in% c('F', 'G', 'Sh', 'T'),
'Canopy', 'Interspace')) %>%
group_by(OBJECTID) %>%
mutate(SiteStability = median(Aggregate_Stability)) %>%
group_by(OBJECTID, Type) %>%
mutate(Type_stability = median(Aggregate_Stability)) %>%
add_count(name = 'Sample_n')
mutate(across(where(is.numeric, ~ na_if(., ""))) %>%
ss <- read.csv(file.path(praw, f[grep('AIM', f)])) %>%
select(OBJECTID, PrimaryKey, starts_with(c('Rating',  'Veg'))) %>%
filter(if_all(Rating1:Veg18, ~ !is.na(.x))) %>%
mutate(across(where(is.numeric, ~ na_if(., "")))) %>%
pivot_longer(cols = Rating1:Rating18, names_to = 'Position',
values_to = 'Aggregate_Stability') %>%
pivot_longer(cols = Veg1:Veg18, names_to = 'Position_Veg',
values_to = 'Vegetation_Type') %>%
mutate(Position = str_remove(Position, 'Rating'),
Position_Veg = str_remove(Position_Veg, 'Veg')) %>%
filter(Position == Position_Veg) %>%
select(-starts_with('Position')) %>%
mutate(Type = if_else(Vegetation_Type %in% c('F', 'G', 'Sh', 'T'),
'Canopy', 'Interspace')) %>%
group_by(OBJECTID) %>%
mutate(SiteStability = median(Aggregate_Stability)) %>%
group_by(OBJECTID, Type) %>%
mutate(Type_stability = median(Aggregate_Stability)) %>%
add_count(name = 'Sample_n')
ss <- read.csv(file.path(praw, f[grep('AIM', f)])) %>%
ss <- read.csv(file.path(praw, f[grep('AIM', f)])) %>%
select(OBJECTID, PrimaryKey, starts_with(c('Rating',  'Veg'))) %>%
filter(if_all(Rating1:Veg18, ~ !is.na(.x))) %>%
mutate(across(where(is.numeric), ~ na_if(., ""))) %>%
pivot_longer(cols = Rating1:Rating18, names_to = 'Position',
values_to = 'Aggregate_Stability') %>%
pivot_longer(cols = Veg1:Veg18, names_to = 'Position_Veg',
values_to = 'Vegetation_Type') %>%
mutate(Position = str_remove(Position, 'Rating'),
Position_Veg = str_remove(Position_Veg, 'Veg')) %>%
filter(Position == Position_Veg) %>%
select(-starts_with('Position')) %>%
mutate(Type = if_else(Vegetation_Type %in% c('F', 'G', 'Sh', 'T'),
'Canopy', 'Interspace')) %>%
group_by(OBJECTID) %>%
mutate(SiteStability = median(Aggregate_Stability)) %>%
group_by(OBJECTID, Type) %>%
mutate(Type_stability = median(Aggregate_Stability)) %>%
add_count(name = 'Sample_n')
ss <- read.csv(file.path(praw, f[grep('AIM', f)])) %>%
select(OBJECTID, PrimaryKey, starts_with(c('Rating',  'Veg'))) %>%
filter(if_all(Rating1:Veg18, ~ !is.na(.x))) %>%
mutate(across(where(is.character), ~ na_if(., ""))) %>%
pivot_longer(cols = Rating1:Rating18, names_to = 'Position',
values_to = 'Aggregate_Stability') %>%
pivot_longer(cols = Veg1:Veg18, names_to = 'Position_Veg',
values_to = 'Vegetation_Type') %>%
mutate(Position = str_remove(Position, 'Rating'),
Position_Veg = str_remove(Position_Veg, 'Veg')) %>%
filter(Position == Position_Veg) %>%
select(-starts_with('Position')) %>%
mutate(Type = if_else(Vegetation_Type %in% c('F', 'G', 'Sh', 'T'),
'Canopy', 'Interspace')) %>%
group_by(OBJECTID) %>%
mutate(SiteStability = median(Aggregate_Stability)) %>%
group_by(OBJECTID, Type) %>%
mutate(Type_stability = median(Aggregate_Stability)) %>%
add_count(name = 'Sample_n')
